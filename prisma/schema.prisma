// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  firstName String
  lastName  String
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Customer  Customer[]
  Invoice   Invoice[]
}

model Customer {
  id        String    @id @default(uuid())
  firstName String
  lastName  String
  email     String?
  phone     String?
  address   String?
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Invoice   Invoice[]
}

model Invoice {
  id          String        @id @default(uuid())
  title       String
  description String?
  amount      Float
  dueDate     DateTime
  status      InvoiceStatus @default(PENDING)
  userId      String
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  customerId  String
  customer    Customer      @relation(fields: [customerId], references: [id], onDelete: Cascade)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

enum InvoiceStatus {
  PENDING
  PAID
  OVERDUE
}
